services:
  db:
    restart: always
    container_name: db
    hostname: db
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_LOCAL_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - dbdata:/var/lib/postgresql/data/
    networks:
      - app-network


  django_backend:
    container_name: django-backend
    hostname: django-backend
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_LOCAL_PORT: ${POSTGRES_LOCAL_PORT}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}

    ports:
      - "${DJANGO_PORT}:${DJANGO_PORT}"
    expose:
      - "${DJANGO_PORT}"
    volumes:
      - .:/app
      - static_volume:/app/public/static
      - media_volume:/app/public/media
    depends_on:
      - db
    restart: on-failure
    networks:
      - app-network

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/app/public/static
      - media_volume:/app/public/media

    ports:
      - "8080:80"
    depends_on:
      - django_backend
    networks:
      - app-network

volumes:
  dbdata:
  static_volume:
  media_volume:

networks:
  app-network:
    driver: bridge